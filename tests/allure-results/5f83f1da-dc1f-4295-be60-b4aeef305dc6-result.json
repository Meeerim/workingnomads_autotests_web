{"name": "test_successful_login", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 2.0s, while waiting for:\nbrowser.has url containing '/users/sign_up'\n\nReason: AssertionError: actual url: https://www.workingnomads.com/jobs\nScreenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1689414169377\\1689414169377.png\nPageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1689414169377\\1689414169377.html", "trace": "fn = <selene.core.conditions.BrowserCondition object at 0x000002BDA08B00D0>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.BrowserCondition object at 0x000002BDA08B00D0>\nentity = <selene.core.entity.Browser object at 0x000002BDA1638690>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\condition.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Browser object at 0x000002BDA1638690>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__ if query_to_str.startswith('<function') else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual url: https://www.workingnomads.com/jobs\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\condition.py:146: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n    @allure.tag(\"web\")\n    @allure.feature(f'Sign in')\n    @allure.story(\"Successful login and expected redirection of URL\")\n    def test_successful_login():\n        with allure.step('Select login and enter an valid username and password'):\n            app.user_log_in.open() \\\n                .fill_email(user.email) \\\n                .fill_password(user.password) \\\n                .login_button()\n        with allure.step('Successfully signed in and in the homepage'):\n>           app.user_log_in.check_for_redirected_url()\n\ntest_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\udemy_autotests_web\\model\\pages\\user_log_in_page.py:22: in check_for_redirected_url\n    browser.should(have.url_containing('/users/sign_up'))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py:136: in should\n    self.wait.for_(condition)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:143: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.BrowserCondition object at 0x000002BDA08B00D0>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 2.0s, while waiting for:\nE                   browser.has url containing '/users/sign_up'\nE                   \nE                   Reason: AssertionError: actual url: https://www.workingnomads.com/jobs\nE                   Screenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1689414169377\\1689414169377.png\nE                   PageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1689414169377\\1689414169377.html\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:141: TimeoutException"}, "steps": [{"name": "Select login and enter an valid username and password", "status": "passed", "start": 1689414169651, "stop": 1689414194130}, {"name": "Successfully signed in and in the homepage", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 2.0s, while waiting for:\nbrowser.has url containing '/users/sign_up'\n\nReason: AssertionError: actual url: https://www.workingnomads.com/jobs\nScreenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1689414169377\\1689414169377.png\nPageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1689414169377\\1689414169377.html\n\n", "trace": "  File \"C:\\Users\\skmee\\PycharmProjects\\udemy_autotests_web\\tests\\test_login.py\", line 17, in test_successful_login\n    app.user_log_in.check_for_redirected_url()\n  File \"C:\\Users\\skmee\\PycharmProjects\\udemy_autotests_web\\udemy_autotests_web\\model\\pages\\user_log_in_page.py\", line 22, in check_for_redirected_url\n    browser.should(have.url_containing('/users/sign_up'))\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py\", line 136, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py\", line 143, in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py\", line 141, in logic\n    raise self._hook_failure(failure)\n"}, "start": 1689414194146, "stop": 1689414196583}], "start": 1689414169651, "stop": 1689414196631, "uuid": "a3471602-2261-4bb6-b89e-a272faceaf95", "historyId": "c52714b8b147663391116672566fcdce", "testCaseId": "f4e42ed032845b0ed5c71539b726bc6e", "fullName": "tests.test_login#test_successful_login", "labels": [{"name": "tag", "value": "web"}, {"name": "feature", "value": "Sign in"}, {"name": "story", "value": "Successful login and expected redirection of URL"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "LAPTOP-OFQSKCIR"}, {"name": "thread", "value": "15396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}
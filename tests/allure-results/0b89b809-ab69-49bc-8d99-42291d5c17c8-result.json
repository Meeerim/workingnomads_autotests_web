{"name": "test_successful_sign_in", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 2.0s, while waiting for:\nbrowser.has url containing '/welcome'\n\nReason: AssertionError: actual url: https://www.workingnomads.com/users/sign_up\nScreenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1689413203825\\1689413203825.png\nPageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1689413203825\\1689413203825.html", "trace": "fn = <selene.core.conditions.BrowserCondition object at 0x0000012D0295B990>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.BrowserCondition object at 0x0000012D0295B990>\nentity = <selene.core.entity.Browser object at 0x0000012D02918950>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\condition.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Browser object at 0x0000012D02918950>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__ if query_to_str.startswith('<function') else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual url: https://www.workingnomads.com/users/sign_up\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\condition.py:146: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nopen_browser = None\n\n    @allure.tag(\"web\")\n    @allure.feature(f'Sign up with valid data')\n    @allure.story(\"Verify that the user is successfully signed up and redirected to the expected page\")\n    def test_successful_sign_in(open_browser):\n        with allure.step('Sign up with new credentials'):\n            app.user_sign_up.open(). \\\n                fill_email(user.email) \\\n                .fill_password(user.password) \\\n                .reenter_password(user.password) \\\n                .agree_with_terms() \\\n                .agree_with_policy() \\\n                .sign_up_button()\n        with allure.step('Sign up '):\n>           app.user_sign_up.check_for_success_sign_up()\n\ntest_signup.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\udemy_autotests_web\\model\\pages\\user_sign_up_page.py:36: in check_for_success_sign_up\n    browser.should(have.url_containing('/welcome'))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py:136: in should\n    self.wait.for_(condition)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:143: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.BrowserCondition object at 0x0000012D0295B990>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 2.0s, while waiting for:\nE                   browser.has url containing '/welcome'\nE                   \nE                   Reason: AssertionError: actual url: https://www.workingnomads.com/users/sign_up\nE                   Screenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1689413203825\\1689413203825.png\nE                   PageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1689413203825\\1689413203825.html\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py:141: TimeoutException"}, "steps": [{"name": "Sign up with new credentials", "status": "passed", "start": 1689413204075, "stop": 1689413224831}, {"name": "Sign up ", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 2.0s, while waiting for:\nbrowser.has url containing '/welcome'\n\nReason: AssertionError: actual url: https://www.workingnomads.com/users/sign_up\nScreenshot: file://C:\\Users\\skmee\\.selene\\screenshots\\1689413203825\\1689413203825.png\nPageSource: file://C:\\Users\\skmee\\.selene\\screenshots\\1689413203825\\1689413203825.html\n\n", "trace": "  File \"C:\\Users\\skmee\\PycharmProjects\\udemy_autotests_web\\tests\\test_signup.py\", line 19, in test_successful_sign_in\n    app.user_sign_up.check_for_success_sign_up()\n  File \"C:\\Users\\skmee\\PycharmProjects\\udemy_autotests_web\\udemy_autotests_web\\model\\pages\\user_sign_up_page.py\", line 36, in check_for_success_sign_up\n    browser.should(have.url_containing('/welcome'))\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\entity.py\", line 136, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py\", line 143, in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\skmee\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selene\\core\\wait.py\", line 141, in logic\n    raise self._hook_failure(failure)\n"}, "start": 1689413224834, "stop": 1689413227286}], "start": 1689413204074, "stop": 1689413227311, "uuid": "9b5d5753-fb9c-4815-8224-960040ea95e7", "historyId": "6fb553b078c0f418b34c6e584c9b8c0a", "testCaseId": "7ed9b29b67e56751274e29d607cbec9a", "fullName": "tests.test_signup#test_successful_sign_in", "labels": [{"name": "feature", "value": "Sign up with valid data"}, {"name": "story", "value": "Verify that the user is successfully signed up and redirected to the expected page"}, {"name": "tag", "value": "web"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_signup"}, {"name": "host", "value": "LAPTOP-OFQSKCIR"}, {"name": "thread", "value": "14296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_signup"}]}